/*
  Auto-generated by Spline

  // the postion attribute to be same for object and physics ref
position: [0, 0, 0],
position={[0, 0, 0]}
*/

import useSpline from "@splinetool/r3f-spline";
import { Canvas, useFrame } from "@react-three/fiber";
import { Physics, useBox, usePlane, useSphere } from "@react-three/cannon";

export default function Plane({ ...props }) {


    const { nodes, materials } = useSpline(
        "https://prod.spline.design/OXhxWphgbNEQxnUZ/scene.splinecode"
    );
    /**
     * 0.1 rotation is to incline the plane
     */
    const [ref, api] = usePlane(() => ({
        mass: 0,
        position: [0, -10, 0],
        type: "Static",
        rotation: [-Math.PI / 2, 0.1, 0]
    }));
    useFrame(({ mouse }) => {
        // console.log("pkp:  ~ file: Plane.js:25 ~ useFrame ~ mouse", mouse)
        // api.rotation.set(-Math.PI / 2 - mouse.y * 0.2, 0 + mouse.x * 0.2, 0);
    });

    return (

        <mesh ref={ref}
            scale={0.25}
            name="Plane123"
            geometry={nodes.Plane123.geometry}
            material={materials["Plane123 Material"]}
            castShadow
            receiveShadow

        />
    );
}
